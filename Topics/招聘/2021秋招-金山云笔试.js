// 2021秋招-金山云笔试

// 2.一只聪明的老鼠发现了一个三角形的奶酪迷宫。这个迷宫有若干个小房间，每个小房间有若干
// 块大小相等的小奶酪（每个房间至少有一块奶酪）。奶酪迷宫的构造如下:(1)奶酪迷官一共
// 有 N 行，第 1 行有一个小房间，第 2 行有两个房间，第 3 行有三个小房间，…第N行有N个小房间。
// （2）所有的小房间都是从第1列开始进行排列的。（3）奶酪迷宫的入口是第 1 行的那个小房间。
// （4）由于奶酪迷宫的特殊构造，小老鼠进入一个房间后，不允许回退到上一层的房间，也不允许
// 走到左边的房间，只允许走到右边或者下面的房间。（5）在奶酪迷宫的最后一层，每个房间都有
// 一扇通往迷宫出口的门，且最后一层的小房间没有通往左边和右边小房间的门。现在
// 小老鼠已经知道了每个小房间里面有多少块小奶酪，它找到了一条可以从入口走到出囗且可以
// 得到最多小奶酪的路径。你能不能编写一个程序，输出小老鼠最多可以得到多少块小奶酪呢？

// 单组输入，第 1 行输入 1 个正整数 N，表示奶酪迷宫的行数，N <= 100。
// 接下来 N 行，第 1 行有 1 个正整数，表示第 1 行 1 个小房间的小奶酪数；
// 第 2 行有 2 个正整数，表示第 2 行 2 个小房间的小奶略数；...；
// 第 N 行有 N 个正整数，表示第 N 行 N 个小房间的小奶酪数。
// 每个房间的小奶酪数均不超过 1000。每一行两个正整数之间用英文的空格隔开。

// 4

// 2
// 1 2
// 1 1 1
// 9 1 1 1

// 1 1
// 2 1 
// 3 2
// 4 5
// 5

let num = 0;
const max = Math.max(...arr)
for (let i = 1; i < arr.length; i++) {
  if (max > arr[i]) num++
}

let max = 1;
for (let i = 0; i < now.length; i++) {
    let num = 1;
    if (i - 1 >= 0) num += test(i, 'left')
    if (i + 1 < now.length - 1) num += test(i, 'right')
    max = Math.max(max, num)
}
function test(index, to) {
    let num = 0;
    if (to === 'left' && now[index] >= now[index - 1]) {
        num++;
        if (index - 1 >= 0) num += test(index - 1, 'left');
    }
    if (to === 'right' && now[index] >= now[index + 1]) {
        num++;
        if (index + 1 < now.length - 1) num += test(index + 1, 'right');
    }
    return num
}